<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.17</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<groupId>academy.devdojo</groupId>
	<artifactId>springboot2_essentials</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<name>springboot2_essentials</name>
	<description>Curso de Spring Boot do DevDojo</description>

	<properties>
		<java.version>19</java.version>
		<mysql-connector-java.version>8.0.33</mysql-connector-java.version>
		<org.mapstruct.version>1.5.4.Final</org.mapstruct.version>
	</properties>

	<dependencies>
		<!-- Starter TEST -->
		<!-- Usado para automatização de testes -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Starter WEB -->
		<!-- Usado para construir web services RESTful com Spring MVC e Tomcat -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- Starter Data JPA -->
		<!-- Abstração pro banco de dados -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<!-- MySQL -->
		<!-- Implementação pro banco de dados -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql-connector-java.version}</version>
		</dependency>

		<!-- DevTools -->
		<!-- Ajuda no desenvolvolvimento e.g. LiveReload -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

		<!-- Validation -->
		<!-- Coloca segurança no projeto e.g. login -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<!-- Sprint Security -->
		<!-- Validação dos campos das classes de domínio -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		
		<!-- Sprint Actuator -->
		<!-- Monitoração e Gerenciamento da aplicação -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		
		<!-- Prometheus -->
		<!-- Monitoração e Gerenciamento da aplicação -->
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>

		<!-- LOMBOCK -->
		<!-- Gerenciamento das classes do domínio -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- Mapstruct -->
		<!-- Mapeamento entre classes -->
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${org.mapstruct.version}</version>
		</dependency>

		<!-- H2 -->
		<!-- Banco de dados em memoria -->
		<!-- Usado no projeto para os testes unitários -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- OpenAPI/Swagger -->
		<!-- Gera documentação -->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
			<version>1.6.12</version>
		</dependency>
	</dependencies>

	<!-- configuração dos testes -->
	<!-- comando: 'mvn test -Pintegration-tests' na pasta raiz do projeto -->
	<profiles>
		<profile>
			<id>integration-tests</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>${maven-surefire-plugin.version}</version>
						<configuration>
							<includes>
								<!-- Busca pelo nome das classes para rodar os
								testes, o primeiro é o padrão -->
								<include>**/*Test.*</include> <!-- para rodar
								todos os testes, menos o de integração que é
								mais demorado -->
								<include>**/*IT.*</include>  <!-- roda só o teste
								de integração -->
							</includes>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source> <!-- depending on your
					project -->
					<target>${java.version}</target> <!-- depending on your
					project -->
					<annotationProcessorPaths>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${org.mapstruct.version}</version>
						</path>
						<!-- other annotation processors -->
					</annotationProcessorPaths>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
